import React, { useState, useEffect } from "react";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { CreditCard, User, LogIn } from "lucide-react";
import ClockField from "@/components/ClockField";
import { useToast } from "@/components/ui/use-toast";
import LinkCardModal from "@/components/LinkCardModal";
import CardVisualization from "@/components/CardVisualization";

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
function checkAuth() {
  return localStorage.getItem("auth_user") === "true";
}

const TIME_KEY = "cabinet_sim_time";

const Cabinet = () => {
  const [isAuth, setIsAuth] = useState(false);
  const [name, setName] = useState("");
  const [cardLinked, setCardLinked] = useState(false);
  const [simTime, setSimTime] = useState(() => {
    return localStorage.getItem(TIME_KEY) || new Date().toLocaleTimeString([], { hour: "2-digit", minute: "2-digit", second: "2-digit" });
  });
  const [linkModalOpen, setLinkModalOpen] = useState(false);
  const [cardNum, setCardNum] = useState(""); // –î–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–æ–º–µ—Ä–∞ –∫–∞—Ä—Ç—ã
  const { toast } = useToast();

  useEffect(() => {
    setIsAuth(checkAuth());
    setName(localStorage.getItem("cabinet_name") || "");
    setCardLinked(localStorage.getItem("cabinet_card") === "linked");
    setSimTime(
      localStorage.getItem(TIME_KEY) ||
        new Date().toLocaleTimeString([], {
          hour: "2-digit",
          minute: "2-digit",
          second: "2-digit",
        })
    );
    setCardNum(localStorage.getItem("cabinet_card_number") || ""); // –∑–∞–≥—Ä—É–∑–∫–∞ –Ω–æ–º–µ—Ä–∞
  }, []);

  function handleLogin() {
    localStorage.setItem("auth_user", "true");
    setIsAuth(true);
  }
  function handleRegister() {
    localStorage.setItem("auth_user", "true");
    setIsAuth(true);
  }
  function handleLogout() {
    localStorage.removeItem("auth_user");
    setIsAuth(false);
  }

  function saveProfileData() {
    if (!cardLinked) {
      toast({
        title: "–°–Ω–∞—á–∞–ª–∞ –ø—Ä–∏–≤—è–∂–∏—Ç–µ –∫–∞—Ä—Ç—É",
        description: "–ß—Ç–æ–±—ã —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–∞–±–∏–Ω–µ—Ç–æ–º, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–≤—è–∑–∞—Ç—å –±–∞–Ω–∫–æ–≤—Å–∫—É—é –∫–∞—Ä—Ç—É.",
      });
      return;
    }
    localStorage.setItem("cabinet_name", name);
    localStorage.setItem(TIME_KEY, simTime);
  }

  function handleSetTime(val: string) {
    setSimTime(val);
    localStorage.setItem(TIME_KEY, val);
  }

  function handleCardLinked(cardNumber: string) {
    setCardLinked(true);
    localStorage.setItem("cabinet_card", "linked");
    localStorage.setItem("cabinet_card_number", cardNumber); // —Å–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–º–µ—Ä
    setCardNum(cardNumber);
    toast({
      title: "–ö–∞—Ä—Ç–∞ –ø—Ä–∏–≤—è–∑–∞–Ω–∞!",
      description: "–¢–µ–ø–µ—Ä—å –ø—Ä–æ—Ñ–∏–ª—å —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.",
      duration: 2000,
    });
  }

  if (!isAuth) {
    return (
      <div className="flex flex-col items-center justify-center h-full pt-24 gap-5">
        <h1 className="text-2xl font-bold mb-1 flex items-center gap-2">
          <User size={28} /> –ö–∞–±–∏–Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        </h1>
        <p className="text-gray-600 text-center max-w-xs">
          –ß—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä–∫–æ–≤–∫–∏, –≤–æ–π–¥–∏—Ç–µ –∏–ª–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å.
        </p>
        <div className="flex gap-3 mt-4">
          <Button onClick={handleLogin} variant="default" className="flex gap-1 items-center">
            <LogIn size={18} /> –í–æ–π—Ç–∏
          </Button>
          <Button onClick={handleRegister} variant="secondary" className="flex gap-1 items-center">
            <User size={18} /> –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
          </Button>
        </div>
      </div>
    );
  }

  return (
    <div className="flex flex-col items-center pt-20 px-4 max-w-md mx-auto w-full">
      <h1 className="text-2xl font-bold mb-3 flex items-center gap-2 text-blue-700">
        <User /> –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç
      </h1>
      <div className="bg-white rounded-xl w-full p-6 shadow-lg border space-y-6">
        <div>
          <label className="block font-semibold mb-0.5">–ò–º—è</label>
          <Input
            placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è"
            value={name}
            onChange={e => setName(e.target.value)}
            disabled={!cardLinked}
          />
        </div>
        <div>
          <label className="block font-semibold mb-0.5 flex gap-1 items-center">
            üïí –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è (–º–æ–∂–Ω–æ –º–µ–Ω—è—Ç—å)
          </label>
          <ClockField value={simTime} onChange={handleSetTime} /* —É–±—Ä–∞–ª disabled - ClockField –µ–≥–æ –Ω–µ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç */ />
          <p className="text-xs text-muted-foreground mt-1">
            –í—Ä–µ–º—è ¬´—Ç–µ—á—ë—Ç¬ª –¥–∞–ª—å—à–µ, –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è.
          </p>
        </div>
        <div>
          <label className="block font-semibold mb-0.5 flex gap-1 items-center">
            <CreditCard size={18} /> –ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞
          </label>
          {cardLinked ? (
            <>
              <CardVisualization cardNumber={cardNum} />
              <div className="flex items-center gap-2 text-green-700 font-medium">
                –ö–∞—Ä—Ç–∞ –ø—Ä–∏–≤—è–∑–∞–Ω–∞
              </div>
            </>
          ) : (
            <>
              <Button
                onClick={() => setLinkModalOpen(true)}
                variant="outline"
                className="flex gap-1 items-center"
              >
                <CreditCard size={16} /> –ü—Ä–∏–≤—è–∑–∞—Ç—å –∫–∞—Ä—Ç—É
              </Button>
              <LinkCardModal
                open={linkModalOpen}
                onOpenChange={setLinkModalOpen}
                onSuccess={(num?: string) => handleCardLinked(num || "")}
              />
            </>
          )}
        </div>
        <Button
          onClick={saveProfileData}
          variant="default"
          className="w-full mt-2"
          disabled={!cardLinked}
        >
          –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è
        </Button>
        <Button
          onClick={handleLogout}
          variant="destructive"
          className="w-full"
        >
          –í—ã–π—Ç–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞
        </Button>
        {!cardLinked && (
          <div className="mt-3 text-red-500 text-center text-sm">
            –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ—É–Ω–∫—Ü–∏—è–º –∫–∞–±–∏–Ω–µ—Ç–∞ —Å–Ω–∞—á–∞–ª–∞ –ø—Ä–∏–≤—è–∂–∏—Ç–µ –±–∞–Ω–∫–æ–≤—Å–∫—É—é –∫–∞—Ä—Ç—É.
          </div>
        )}
      </div>
    </div>
  );
};

export default Cabinet;
