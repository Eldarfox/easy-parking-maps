
import React, { useState, useEffect } from "react";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { CreditCard, User, LogIn } from "lucide-react";

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
function checkAuth() {
  return localStorage.getItem("auth_user") === "true";
}

// –•—É–∫ –¥–ª—è "–∂–∏–≤–æ–≥–æ" –≤—Ä–µ–º–µ–Ω–∏
function useLiveTime() {
  const [time, setTime] = useState(() => {
    const now = new Date();
    return now.toLocaleTimeString([], { hour: "2-digit", minute: "2-digit", second: "2-digit" });
  });
  useEffect(() => {
    const interval = setInterval(() => {
      const now = new Date();
      setTime(now.toLocaleTimeString([], { hour: "2-digit", minute: "2-digit", second: "2-digit" }));
    }, 1000);
    return () => clearInterval(interval);
  }, []);
  return time;
}

const Cabinet = () => {
  const [isAuth, setIsAuth] = useState(false);
  const [name, setName] = useState("");
  const [cardLinked, setCardLinked] = useState(false);
  const time = useLiveTime();

  // –ü—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏ –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è
  useEffect(() => {
    setIsAuth(checkAuth());
    setName(localStorage.getItem("cabinet_name") || "");
    setCardLinked(localStorage.getItem("cabinet_card") === "linked");
  }, []);

  // –ú–æ–∫–æ–≤—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –≤—Ö–æ–¥–∞, —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏, –≤—ã—Ö–æ–¥–∞
  function handleLogin() {
    localStorage.setItem("auth_user", "true");
    setIsAuth(true);
  }
  function handleRegister() {
    localStorage.setItem("auth_user", "true");
    setIsAuth(true);
  }
  function handleLogout() {
    localStorage.removeItem("auth_user");
    setIsAuth(false);
  }

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è
  function saveProfileData() {
    localStorage.setItem("cabinet_name", name);
  }

  // "–ü—Ä–∏–≤—è–∑–∞—Ç—å –∫–∞—Ä—Ç—É" (–∑–∞—Ç—ã—á–∫–∞)
  function handleLinkCard() {
    setCardLinked(true);
    localStorage.setItem("cabinet_card", "linked");
  }

  if (!isAuth) {
    return (
      <div className="flex flex-col items-center justify-center h-full pt-24 gap-5">
        <h1 className="text-2xl font-bold mb-1 flex items-center gap-2">
          <User size={28} /> –ö–∞–±–∏–Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        </h1>
        <p className="text-gray-600 text-center max-w-xs">
          –ß—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä–∫–æ–≤–∫–∏, –≤–æ–π–¥–∏—Ç–µ –∏–ª–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å.
        </p>
        <div className="flex gap-3 mt-4">
          <Button onClick={handleLogin} variant="default" className="flex gap-1 items-center">
            <LogIn size={18} /> –í–æ–π—Ç–∏
          </Button>
          <Button onClick={handleRegister} variant="secondary" className="flex gap-1 items-center">
            <User size={18} /> –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
          </Button>
        </div>
      </div>
    );
  }

  // –ï—Å–ª–∏ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω ‚Äî –ø—Ä–æ—Ñ–∏–ª—å
  return (
    <div className="flex flex-col items-center pt-20 px-4 max-w-md mx-auto w-full">
      <h1 className="text-2xl font-bold mb-3 flex items-center gap-2 text-blue-700">
        <User /> –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç
      </h1>
      <div className="bg-white rounded-xl w-full p-6 shadow-lg border space-y-6">
        <div>
          <label className="block font-semibold mb-0.5">–ò–º—è</label>
          <Input
            placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è"
            value={name}
            onChange={e => setName(e.target.value)}
          />
        </div>
        <div>
          <label className="block font-semibold mb-0.5 flex gap-1 items-center">
            üïí –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
          </label>
          <div className="text-2xl font-mono py-2 select-none">{time}</div>
        </div>
        <div>
          <label className="block font-semibold mb-0.5 flex gap-1 items-center">
            <CreditCard size={18} /> –ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞
          </label>
          {cardLinked ? (
            <div className="flex items-center gap-2 text-green-700 font-medium">
              –ö–∞—Ä—Ç–∞ –ø—Ä–∏–≤—è–∑–∞–Ω–∞
            </div>
          ) : (
            <Button onClick={handleLinkCard} variant="outline" className="flex gap-1 items-center">
              <CreditCard size={16} /> –ü—Ä–∏–≤—è–∑–∞—Ç—å –∫–∞—Ä—Ç—É
            </Button>
          )}
        </div>
        <Button
          onClick={saveProfileData}
          variant="default"
          className="w-full mt-2"
        >
          –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è
        </Button>
        <Button
          onClick={handleLogout}
          variant="destructive"
          className="w-full"
        >
          –í—ã–π—Ç–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞
        </Button>
      </div>
    </div>
  );
};

export default Cabinet;

